<?php

/*

// комментарии
{{-- комментарии --}}

// выводить переменную (внутри все экранируется htmlentities)
{{ $some_var }}

// убрать экранирование html
{!! $some_var !!}

// внутри работают и функции пхп
<p>{{ date('Y-m-d') }}</p>

// указать что это не пхп переменная, а для рендеринга js
@{{ $some_var }}
или если их много, то
@verbatim
    <p>Hello, {{ $some_var }}</p>
@endverbatim

// json
<script>
    var someArray = {{ Js::from($some_array) }} // аналогично <?php echo json_encode($some_array) ?>
</script>

// шаблоны
в шаблоне пишем
@yield('title', 'default title') // название секции, 2е значение по умолчанию можно опустить
во вью
в начале файла
@extends('layout.main') // имя шаблона
@section('title') // тоже можно указать 2й параметр по умолчанию
    <h1>Главная страница</h1>
@endsection

// в шаблоне можно использовать секции и сразу выводить
@section('navbar')
    <div>
        ...
    </div>
@show

Включить содержимое из родительского раздела в текущий можно с помощью директивы @parent.
Если этого не сделать, то содержимое текущего раздела полностью заменит все, что определено в родителе.
@section('navbar') // включить секцию, если не прописать то ее не будет
    @parent
    доп контент
@endsection


Компоновщики представлений позволяют легко организовать доступность представлению определенной информации при каждой его загрузке.
Внедрение сервисов дает возможность самому представлению запрашивать данные прямо из контейнера приложения.









*/