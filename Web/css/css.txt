Блочные элементы
начинаются с новой строки.
Примерами могут быть элементы <h1> — <h6>, <p> и <div>.

Встроенные элементы
располагаются в тексте и не начинаются с новой строки.
Примеры таких элементов: <b>, <i>, <img>, <em> и <span>.

<link href="css/styles.css" type="text/css" rel="stylesheet" />
_______________________________________________________________________________________________________________
СЕЛЕКТОРЫ

УНИВЕРСАЛЬНЫЙ СЕЛЕКТОР
Применяется ко всем элементам в документе
* {} Все элементы страницы

СЕЛЕКТОР ТИПА
Соответствует именам элементов
h1, h2, h3 {} Элементы <h1>, <h2> и <h3>

СЕЛЕКТОР КЛАССА
Соответствует элементу, чей атрибут class имеет значение, совпадающее с указанным после точки
.note {} Элемент, чей атрибут class имеет значение note
p.note {} Только элементы <p>, чьи атрибуты class имеют значение note

СЕЛЕКТОР ИДЕНТИФИКАТОРА
Соответствует элементу, чей атрибут id имеет значение, совпадающее с указанным после символа # 
#introduction {} Элемент, чей атрибут id имеет значение introduction

ДОЧЕРНИЙ СЕЛЕКТОР
Соответствует элементу, являющемуся прямым потомком другого элемента
li > a {} Элементы <a>, являющиеся прямыми потомками элемента <li>, но не остальные элементы <a> на странице

СЕЛЕКТОР ПОТОМКА
Соответствует элементу, являющемуся потомком другого элемента (не обязательно прямым)
p a {} Любые элементы <a>, располагающиеся внутри <p>, даже в том случае, когда между ними находятся другие элементы

СЕЛЕКТОР СЕСТРИНСКОГО ЭЛЕМЕНТА
Соответствует элементу, являющемуся сестринским по отношению к другому элементу
h1 + p {} Первый элемент <p>, располагающийся после любого элемента <h1>, но не любые другие элементы <p>

СЕЛЕКТОР ОБОБЩЕННЫХ РОДСТВЕННЫХ ЭЛЕМЕНТОВ
Соответствует элементу, являющемуся сестринским по отношению к другому элементу, хотя не обязательно расположенному перед ним
h1~p {} Если бы у вас было два элемента <p>, являющихся сестринскими по отношению к элементу <h1>, то это правило бы применялось к обоим
(ко всем элементам p идущим сразу за h1, у них должен быть общий родитель)
_______________________________________________________________________________________________________________

ВАЖНОСТЬ

Вы можете добавить текст 
!important 
после значения любого свойства, 
чтобы указать, что его следует считать самым важным из правил, относящихся к одному и тому же элементу.

p b {
    color: blue !important;}

НАСЛЕДОВАНИЕ

Чтобы свойства наследовали значения родительских элементов, вы можете использовать 
inherit 
в качестве их значения.

body {
    font-family: Arial, Verdana, sans-serif;
    color: #665544;
    padding: 10px;}
.page {
    padding: inherit;}
	


229