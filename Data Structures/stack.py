"""
Стек можно рассматривать как абстрактную структуру данных в
которой возможна работа только с верхним последним элементом.

Организация данных по типу очереди LIFO(Last In First Out).
Функционал стека позволяет добавлять, удалять и читать верхний элемент.
Часто реализуется на базе односвязного или двусвязного списка. На вершину списка ссылается указатель Top и через него
осуществляется обработка элементов стека(добавление, удаление и чтение).

Основные методы, которые, как правило, поддерживаются стеком:
top()   | Возвращает значение верхнего элемента стека                 | O(1)
push()  | Добавляет новый элемент на вершину стека                    | O(1)
pop()   | Удаляет элемент с вершины стека                             | O(1)
size()  | Возвращает число элементов в стеке                          | O(1)
empty() | Возвращает True, если стек пуст, и False в противном случае | O(1)

"""

from collections import deque
from queue import LifoQueue  # используется при многопоточности

stack = deque()
stack.append(1)
stack.append(2)
stack.append(3)
print(stack)  # deque([1, 2, 3])
stack.pop()
print(stack)  # deque([1, 2])
stack.pop()
print(stack)  # deque([1])
stack.pop()
print(stack)  # deque([])
