Урок 1. Введение в Git

Урок 2. Установка и настройка Git

git --version проверка версии

Урок 3. Основные команды терминала

git config --global user.name "Your Name"
git config --global user.email Your Email
git config --global color.ui auto для подсветки
git config --list список конфигураций

терминал:
ls просмотр всех файлов в директории
cd смена директории
cd ~ перейти в домашнюю директорию
cd .. перейти на уровень выше(выйти из текущей директории назад)
mkdir создать директорию
touch file.txt на винде  echo $null > file.txt(с перезаписью), echo $null >> file.txt(с добавлением в конец)
cp файл файл2 скопировать файл
mv файл файл2 переименовать файл
echo "hey" вывести текст
echo "hey" > file.txt сохранить текст в файле (будет перезапись файла)
cat file.txt посмотреть содержание файла
rm file.txt удалить файл
rm -R namedir удалить рекурсивно директорию

Урок 4. Работа с репозиториями в Git

git init создает пустой репозиторий
git status посмотреть текущее состояние репозитория
git remote add origin https://..... связать с удаленным репозиторием
git remote -v посмотреть список удаленных соединений

Урок 5. Управление файлами репозитория

git add file.txt добавление файла в индекс изменений
git rm --cache file.txt удаление файла из индекса изменений
git commit записать коммит
git commit -m 'some message' записать коммит с сообщением

.gitkeep файл для сохранения пустых папок
.gitignore файл для файлов которые нужно игнорировать (не попали в индекс)

Урок 6. История изменений

git log посмотреть историю коммитов
git log --oneline более кратко
git reset somehash сбрасывает состояние на нужный коммит (Soft - с сохранением всех изменений без удаления, Mixed - сохранение текущих измененных файлов но сброс тех что в индексе, Hard - сброс всех изменений)
git reset --hard сбрасывает состояние на последний коммит
git reflog посмотреть историю действий
git revert somehash создает новый коммит, отменяя действие в указанном коммите
git restore file.txt сброс состояния файла до последнего коммита

Урок 7. Работа с ветками репозитория

git branch посмотреть какие есть ветки
git branch somebranch создать ветку
git checkout somebranch переключиться на ветку
git branch somebranch frombranch создать ветку и указать с какой ветки
git checkout -b somebranch создание и переключение на ветку

Урок 8. Публикация репозитория

ssh-keygen генерация ssh
git clone ссылка путь клонирование репозитория
git push загрузить все изменения на удаленный репозиторий
git push -u origin somebranch создать ветку на удаленном репозитории и загрузить на нее
git pull стянуть все обновления ветки из удаленного репозитория
git fetch подгрузить обновления из удаленного репозитория

Урок 9. Слияния веток

git merge somebranch ветка somebranch должна влить все изменения в ветку откуда вызываем (можно указать несколько веток)
git branch -d somebranch somebranch2 удалить ветки
git push --delete origin somebranch удалить ветки на удаленном репозитории
git add . добавить все файлы в индекс
git rebase tosomebranch сместить текущую ветку на последний коммит указанной ветки
git push --force принудительно перезаписать удаленную ветку на текущую

Урок 10. Управление версиями

git tag 1.0.0(somever) пометить коммит тегом
git tag посмотреть тег
git tag --list посмотреть список тегов
git push --tags загрузить теги на удаленный репозиторий
git tag -d 1.0.0(somever) удалить тег
git push --delete origin 1.0.0(somever) удалить тег из удаленного репозитория

Урок 11. Создание pull-request

это merge, но путем запроса на слияние
при git push -u origin somebranch на гитхабе можно будет открыть pull-request на слияние веток

Урок 12. Сложные операции

git stash все изменения будут выгружены во временное хранилище
git stash list посмотреть доступные стешы
git stash push file.txt добавить файл к уже существующему стешу на текущей ветке
git stash pop stashname отменить стеш и развернуть его на ветку

git merge somebranch --squash подтянуть все изменения не совершая коммит

git rebase -i HEAD~X склеить X коммитов

git cherry-pick somehash перенести коммит с другой ветки на свою ветку
git cherry-pick somebranch перенести последний коммит с указанной ветки на свою ветку
git cherry-pick ..somebranch перенести все коммиты с указанной ветки на свою ветку

git commit --amend перезаписать последний коммит (после выполняем пуш с форс)

